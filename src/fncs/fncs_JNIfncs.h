/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class fncs_JNIfncs */

#ifndef _Included_fncs_JNIfncs
#define _Included_fncs_JNIfncs
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     fncs_JNIfncs
 * Method:    initialize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_fncs_JNIfncs_initialize__
  (JNIEnv *, jclass);

/*
 * Class:     fncs_JNIfncs
 * Method:    initialize
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fncs_JNIfncs_initialize__Ljava_lang_String_2
  (JNIEnv *, jclass, jstring);

/*
 * Class:     fncs_JNIfncs
 * Method:    agentRegister
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_fncs_JNIfncs_agentRegister__
  (JNIEnv *, jclass);

/*
 * Class:     fncs_JNIfncs
 * Method:    agentRegister
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fncs_JNIfncs_agentRegister__Ljava_lang_String_2
  (JNIEnv *, jclass, jstring);

/*
 * Class:     fncs_JNIfncs
 * Method:    is_initialized
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_fncs_JNIfncs_is_1initialized
  (JNIEnv *, jclass);

/*
 * Class:     fncs_JNIfncs
 * Method:    time_request
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fncs_JNIfncs_time_1request
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fncs_JNIfncs
 * Method:    publish
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fncs_JNIfncs_publish
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     fncs_JNIfncs
 * Method:    publish_anon
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fncs_JNIfncs_publish_1anon
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     fncs_JNIfncs
 * Method:    agentPublish
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fncs_JNIfncs_agentPublish
  (JNIEnv *, jclass, jstring);

/*
 * Class:     fncs_JNIfncs
 * Method:    route
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fncs_JNIfncs_route
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring);

/*
 * Class:     fncs_JNIfncs
 * Method:    die
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_fncs_JNIfncs_die
  (JNIEnv *, jclass);

/*
 * Class:     fncs_JNIfncs
 * Method:    end
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_fncs_JNIfncs_end
  (JNIEnv *, jclass);

/*
 * Class:     fncs_JNIfncs
 * Method:    update_time_delta
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fncs_JNIfncs_update_1time_1delta
  (JNIEnv *, jclass, jlong);

/*
 * Class:     fncs_JNIfncs
 * Method:    get_events
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_fncs_JNIfncs_get_1events
  (JNIEnv *, jclass);

/*
 * Class:     fncs_JNIfncs
 * Method:    agentGetEvents
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fncs_JNIfncs_agentGetEvents
  (JNIEnv *, jclass);

/*
 * Class:     fncs_JNIfncs
 * Method:    get_value
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fncs_JNIfncs_get_1value
  (JNIEnv *, jclass, jstring);

/*
 * Class:     fncs_JNIfncs
 * Method:    get_values
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_fncs_JNIfncs_get_1values
  (JNIEnv *, jclass, jstring);

/*
 * Class:     fncs_JNIfncs
 * Method:    get_keys
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_fncs_JNIfncs_get_1keys
  (JNIEnv *, jclass);

/*
 * Class:     fncs_JNIfncs
 * Method:    get_name
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fncs_JNIfncs_get_1name
  (JNIEnv *, jclass);

/*
 * Class:     fncs_JNIfncs
 * Method:    get_time_delta
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_fncs_JNIfncs_get_1time_1delta
  (JNIEnv *, jclass);

/*
 * Class:     fncs_JNIfncs
 * Method:    get_id
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_fncs_JNIfncs_get_1id
  (JNIEnv *, jclass);

/*
 * Class:     fncs_JNIfncs
 * Method:    get_simulator_count
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_fncs_JNIfncs_get_1simulator_1count
  (JNIEnv *, jclass);

/*
 * Class:     fncs_JNIfncs
 * Method:    get_version
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_fncs_JNIfncs_get_1version
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
